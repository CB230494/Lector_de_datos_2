# app_dashboard_plan_policial.py
import streamlit as st
import pandas as pd
import numpy as np
import io, re, textwrap
import matplotlib.pyplot as plt
import matplotlib.patheffects as pe
from matplotlib.ticker import MaxNLocator

st.set_page_config(page_title="Plan Policial ‚Äì Dashboard", layout="wide")

# ---------------- estilos ----------------
COLOR_ROJO = "#D32F2F"
COLOR_AZUL = "#1565C0"
PALETA = [
    "#1565C0", "#D32F2F", "#2E7D32", "#F9A825", "#6A1B9A",
    "#00838F", "#5D4037", "#C51162", "#455A64", "#7CB342"
]  # responsables: colores distintos
SOMBRA = [pe.withSimplePatchShadow(offset=(2,-2), shadow_rgbFace=(0,0,0), alpha=0.25, rho=0.98)]

def save_png(fig):
    buf = io.BytesIO(); fig.savefig(buf, format="png", bbox_inches="tight", dpi=170); buf.seek(0); return buf
def nonempty(s: pd.Series):
    return (s.dropna().map(lambda x: str(x).strip()).replace("", np.nan).dropna())
def wrap(labels, w=20): return ["\n".join(textwrap.wrap(str(x), width=w)) for x in labels]

# ---------------- normalizadores ----------------
PERI_MAP = {
    "diario":"Diario","diaria":"Diario","semanal":"Semanal","quincenal":"Quincenal",
    "mensual":"Mensual","bimestral":"Bimestral","trimestral":"Trimestral",
    "semestral":"Semestral","anual":"Anual"
}
def norm_peri(x):
    if pd.isna(x): return np.nan
    k = str(x).strip().lower(); return PERI_MAP.get(k, str(x).strip().title())

SEP_ZONAS = re.compile(r"\s*,\s*|\s+y\s+", flags=re.IGNORECASE)
def tokenizar_zonas_unicas(valor):
    if pd.isna(valor): return []
    partes = [p.strip() for p in SEP_ZONAS.split(str(valor)) if p and p.strip()]
    return sorted(set(re.sub(r"\s{2,}"," ",p) for p in partes))

# ---------------- lectura ----------------
st.title("üìä Plan Policial ‚Äì Dashboard (ajustado)")
archivo = st.file_uploader("üìÅ Sube el Excel", type=["xlsx","xlsm"])
if not archivo:
    st.info("Sube el archivo para iniciar."); st.stop()
xls = pd.ExcelFile(archivo)
hoja = "Plan Policial" if "Plan Policial" in xls.sheet_names else xls.sheet_names[0]
df = pd.read_excel(xls, sheet_name=hoja)
st.success(f"‚úÖ Hoja: **{hoja}** ‚Äì {df.shape[0]} filas √ó {df.shape[1]} columnas")

# ---------------- columnas ----------------
COL_INDOLE = "√çndole"                   # si no existe tomaremos columna B
COL_ZONA   = "Zona(s)de trabajo"
COL_RESP   = "Responsable"
COL_META   = "Meta cuantitativa"
COL_PERI   = "Peridiocidad"

# limpieza m√≠nima
df = df.copy()
df["Meta_q"] = pd.to_numeric(df.get(COL_META), errors="coerce")
if COL_PERI in df: df["Peri_norm"] = df[COL_PERI].map(norm_peri)

# ======== GRAFICO 1 (√∫nico cuantitativo principal): Donut por Responsable ========
st.header("1) Meta cuantitativa por responsable (donut)")
df_mr = df.loc[df["Meta_q"].notna() & df[COL_RESP].notna(), [COL_RESP,"Meta_q"]]
if df_mr.empty:
    st.info("No hay datos de Meta y Responsable.")
else:
    resumen = df_mr.groupby(COL_RESP)["Meta_q"].sum().sort_values(ascending=False)
    labels = list(resumen.index.astype(str))
    values = list(resumen.values)
    total = int(np.nansum(values))

    # donut con colores distintos
    fig, ax = plt.subplots(figsize=(9,6), constrained_layout=True)
    colors = [PALETA[i % len(PALETA)] for i in range(len(labels))]
    wedges, _, autotexts = ax.pie(
        values, startangle=90, pctdistance=0.78,
        autopct=lambda p: f"{p:.1f}%\n({int(round(p*total/100.0))})",
        colors=colors
    )
    for w in wedges: w.set_path_effects([pe.withStroke(linewidth=2, foreground="white", alpha=0.8)])
    ax.add_artist(plt.Circle((0,0),0.55,fc="white"))
    ax.set_title("Distribuci√≥n de la meta cuantitativa por responsable")
    ax.legend(wedges, wrap(labels, 30), title="Responsable", loc="center left", bbox_to_anchor=(1, 0.5))
    st.pyplot(fig)
    st.download_button("üñºÔ∏è Descargar PNG", data=save_png(fig), file_name="donut_meta_responsable.png", mime="image/png")

    # texto claro
    top_name = labels[0]; top_val = int(values[0]); top_pct = round(top_val/total*100,1) if total>0 else 0
    st.markdown(
        f"**Resumen:** el responsable con mayor carga es **{top_name}** con **{top_val}** unidades "
        f"({top_pct}% del total). El **total de la meta** asciende a **{total}**. "
        "Este gr√°fico explica c√≥mo se reparte la meta y justifica la priorizaci√≥n de seguimiento."
    )

st.markdown("---")

# ======== GRAFICO 2: √çndole (solo 3 categor√≠as) ========
st.header("2) √çndole (Operativo, Preventivo, Gesti√≥n administrativa)")
# si no est√° la columna por nombre, usamos la columna B
serie_indole = df[COL_INDOLE] if COL_INDOLE in df.columns else (df.iloc[:,1] if df.shape[1]>1 else pd.Series(dtype=object))
# mapeo a 3 clases
MAP_INDOLE = {
    "operativo":"Operativo",
    "preventivo":"Preventivo",
    "gesti√≥n administrativa":"Gesti√≥n administrativa",
    "gestion administrativa":"Gesti√≥n administrativa",
}
def map_indole(v):
    if pd.isna(v): return np.nan
    k = str(v).strip().lower()
    for kk, vv in MAP_INDOLE.items():
        if kk in k: return vv
    # si coincide exactamente con tus valores, se respeta:
    if str(v).strip() in MAP_INDOLE.values(): return str(v).strip()
    return np.nan  # ignora otros textos largos

ind_clas = serie_indole.map(map_indole).dropna()
if ind_clas.empty:
    st.info("No hay valores de √çndole v√°lidos (Operativo/Preventivo/Gesti√≥n administrativa).")
else:
    counts = ind_clas.value_counts()[["Operativo","Preventivo","Gesti√≥n administrativa"]].fillna(0).astype(int)
    fig2, ax = plt.subplots(figsize=(7.5,4.6), constrained_layout=True)
    colors = [COLOR_ROJO, COLOR_AZUL, "#2E7D32"]
    bars = ax.bar(counts.index, counts.values, color=colors, alpha=0.95)
    for b in bars:
        b.set_path_effects(SOMBRA)
        ax.text(b.get_x()+b.get_width()/2, b.get_height(), f"{int(b.get_height())}", ha="center", va="bottom",
                path_effects=[pe.withStroke(linewidth=3, foreground="white")])
    ax.set_title("√çndole ‚Äì conteo real (solo 3 categor√≠as)")
    ax.yaxis.set_major_locator(MaxNLocator(integer=True))
    ax.grid(axis="y", alpha=0.25)
    st.pyplot(fig2)
    st.download_button("üñºÔ∏è Descargar PNG", data=save_png(fig2), file_name="indole_3categorias.png", mime="image/png")
    st.markdown(
        "**Lectura:** predomina la √≠ndole **Operativo/Preventivo** frente a **Gesti√≥n administrativa**. "
        "Esto orienta el tipo de intervenci√≥n prioritaria y la log√≠stica requerida."
    )

st.markdown("---")

# ======== (Opcional) GRAFICO 3: Zonas tokenizadas ========
with st.expander("3) Zonas de trabajo (si deseas mostrarlo)"):
    if "Zona(s)de trabajo" in df.columns:
        zonas_tokens = df["Zona(s)de trabajo"].dropna().apply(tokenizar_zonas_unicas)
        tokens = [z for zs in zonas_tokens for z in zs if z]
        zonas_sr = nonempty(pd.Series(tokens, dtype=object))
        if not zonas_sr.empty:
            counts_z = zonas_sr.value_counts().astype(int)
            topZ = st.slider("Top zonas", 5, max(5, min(30, len(counts_z))), min(10, len(counts_z)))
            figZ, ax = plt.subplots(figsize=(9,5), constrained_layout=True)
            sub = counts_z.head(topZ)
            bars = ax.bar(wrap(sub.index, 22), sub.values, color=COLOR_AZUL, alpha=0.95)
            for b in bars:
                b.set_path_effects(SOMBRA)
                ax.text(b.get_x()+b.get_width()/2, b.get_height(), f"{int(b.get_height())}", ha="center", va="bottom",
                        path_effects=[pe.withStroke(linewidth=3, foreground="white")])
            ax.set_title("Zonas de trabajo (conteo entero)")
            ax.yaxis.set_major_locator(MaxNLocator(integer=True))
            ax.grid(axis="y", alpha=0.25)
            st.pyplot(figZ)
            st.download_button("üñºÔ∏è Descargar PNG", data=save_png(figZ), file_name="zonas_trabajo.png", mime="image/png")
            st.markdown("**Lectura:** cada menci√≥n suma 1 por zona; √∫til para priorizaci√≥n territorial.")
        else:
            st.info("No hay zonas v√°lidas para contar.")
    else:
        st.info("No se encontr√≥ la columna 'Zona(s)de trabajo'.")

st.markdown("---")

# ===================== INFORME CUALITATIVO (con tus textos) =====================
st.header("Informe cualitativo (resumen editable)")
st.caption("Solo se muestran bloques con contenido (se omiten NA o vac√≠os).")

# --- Actividad estrat√©gica (lista) ---
st.subheader("Actividad estrat√©gica")
txt_actividad = st.text_area("Pega/edita las actividades estrat√©gicas (una por l√≠nea):", value="""Coordinaci√≥n y ejecuci√≥n de operativos interinstitucionales nocturnos con enfoque en objetivos estrat√©gicos dentro del √°rea de intervenci√≥n.
Despliegue de operativos presenciales en horarios nocturnos en zonas previamente identificadas como puntos de inter√©s, con el objetivo de reforzar la vigilancia, la disuasi√≥n del delito y la presencia institucional.
Gesti√≥n institucional mediante oficio para la asignaci√≥n de recurso humano y transporte policial necesario para garantizar la cobertura operativa diaria en zonas de inter√©s.
Ejecuci√≥n de actividades c√≠vico-policiales en espacios p√∫blicos y centros educativos, orientadas a fortalecer los v√≠nculos comunitarios, promover la cultura de paz y fomentar la convivencia ciudadana desde un enfoque preventivo.
Despliegue de operativos presenciales en horarios mixtos en zonas previamente identificadas como puntos de inter√©s, con el objetivo de reforzar la vigilancia, la disuasi√≥n del delito y la presencia institucional.
Desarrollo de operativos interinstitucionales de control dirigidos a la regulaci√≥n de ventas informales y actividades no autorizadas de cobro de parqueo en la zona costera.
Implementaci√≥n de acciones preventivas, lideradas por programas policiales, orientadas a la recuperaci√≥n y apropiaci√≥n positiva de espacios p√∫blicos.
Ejecuci√≥n de talleres y jornadas de sensibilizaci√≥n en seguridad comercial, dirigidas a fortalecer las capacidades preventivas del sector empresarial y comercial.
Ejecuci√≥n de operativos policiales focalizados para el abordaje e identificaci√≥n de personas y veh√≠culos vinculados a delitos de robo en viviendas, con base en an√°lisis previo de informaci√≥n e inteligencia policial.
Capacitaciones en Seguridad Comunitaria, dirigidas a residentes extranjeros angloparlantes, con el fin de fortalecer su integraci√≥n y participaci√≥n en los esfuerzos preventivos locales.""")
acts = [a.strip() for a in txt_actividad.split("\n") if a.strip() and a.strip().upper()!="NA"]
if acts:
    st.markdown("\n".join([f"- {a}" for a in acts]))

# --- Actores ‚Äì Indicador ‚Äì Consideraciones (tabla) ---
st.subheader("Actores involucrados / Indicador / Consideraciones")
txt_tabla = st.text_area("Pega la tabla (3 columnas separadas por TAB o punto y coma ';'):", value=
"""Fuerza P√∫blica|Polic√≠a de Tr√°nsito|Polic√≠a de Migraci√≥n|Polic√≠a Tur√≠stica|DIAC;Cantidad de operativos policiales;1-Es necesario reforzar el personal del DIAC para esclarecer los objetivos a intervenir durante los operativos.\n2-Se requiere la presencia de la unidad de polic√≠a canina.\n3-La ubicaci√≥n de los operativos debe ser aleatoria, seg√∫n an√°lisis previo de la zona.\n4-Los operativos deben ser fugaces, con una duraci√≥n m√°xima de 40 minutos por zona.
Fuerza P√∫blica;Cantidad de operativos policiales;1-Se requiere el apoyo constante de al menos 12 funcionarios del personal de gesti√≥n durante todos los d√≠as de ejecuci√≥n, con el fin de garantizar la efectividad de la acci√≥n policial.\n2-Es necesario disponer de al menos una unidad policial adicional (recurso m√≥vil) para asegurar una cobertura operativa adecuada y fortalecer la intervenci√≥n en campo.
Fuerza P√∫blica;Cantidad de oficios emitidos;
Fuerza P√∫blica;Cantidad de c√≠vicos policiales;NA
Fuerza P√∫blica;Cantidad de operativos policiales;1-Se requiere el apoyo constante de al menos 12 funcionarios del personal de gesti√≥n durante todos los d√≠as de ejecuci√≥n, con el fin de garantizar la efectividad de la acci√≥n policial.\n2-Es necesario disponer de al menos una unidad policial adicional (recurso m√≥vil) para asegurar una cobertura operativa adecuada y fortalecer la intervenci√≥n en campo.
Fuerza P√∫blica|Polic√≠a de Tr√°nsito|Polic√≠a de Migraci√≥n|Polic√≠a Tur√≠stica|DIAC;Cantidad de operativos policiales;NA
Fuerza P√∫blica;Cantidad de acciones preventivas;NA
Fuerza P√∫blica;Cantidad de talleres;NA
Fuerza P√∫blica;Cantidad de operativos policiales;NA
Fuerza P√∫blica;Cantidad de capacitaciones;NA"""
)
rows = []
for line in txt_tabla.splitlines():
    if not line.strip(): continue
    parts = [p.strip() for p in re.split(r";|\t", line, maxsplit=2)]
    if len(parts)<3: parts += [""]*(3-len(parts))
    actores, indicador, consid = parts
    if (not actores) and (not indicador) and (not consid): continue
    if consid.upper()=="NA": consid = ""
    rows.append({"Actores": actores.replace("|", ", "), "Indicador": indicador, "Consideraciones": consid})
if rows:
    tabla = pd.DataFrame(rows)
    tabla = tabla[(tabla["Actores"]!="") | (tabla["Indicador"]!="") | (tabla["Consideraciones"]!="")]
    st.dataframe(tabla, use_container_width=True)

# --- Efecto esperado (lista) ---
st.subheader("Efecto esperado")
txt_efecto = st.text_area("Pega/edita efectos (uno por l√≠nea):", value="""Reducci√≥n de actividades il√≠citas y fortalecimiento de la presencia institucional en horarios de mayor riesgo.
Aumento de la percepci√≥n policial en puntos cr√≠ticos mediante presencia policial visible.
Asegurar una presencia policial continua y eficaz en las zonas priorizadas, mediante la dotaci√≥n oportuna del personal y los medios log√≠sticos requeridos.
Fortalecer el v√≠nculo entre la comunidad y la Fuerza P√∫blica, promoviendo una cultura de paz, prevenci√≥n y convivencia por medio de la interacci√≥n positiva en espacios p√∫blicos y centros educativos.
Recuperar el orden en el espacio p√∫blico, reducir la informalidad y garantizar condiciones m√°s seguras y reguladas para residentes, turistas y comercios formales.
Transformar los espacios p√∫blicos en entornos seguros y activos, fomentando su uso positivo por parte de la comunidad y reduciendo su vulnerabilidad ante actividades delictivas
Mejorar la percepci√≥n de seguridad y fortalecer la capacidad de prevenci√≥n del delito en el sector comercial, mediante la adopci√≥n de buenas pr√°cticas y la articulaci√≥n con la Fuerza P√∫blica.
Reducir la incidencia de robos a viviendas mediante la identificaci√≥n oportuna de objetivos vinculados, as√≠ como el fortalecimiento de la capacidad de respuesta y disuasi√≥n policial en zonas residenciales vulnerables.
Mejorar el nivel de conocimiento y la capacidad de respuesta de la poblaci√≥n extranjera residente, promoviendo su vinculaci√≥n con las estrategias de seguridad comunitaria y fortaleciendo la cohesi√≥n social.""")
efectos = [e.strip() for e in txt_efecto.split("\n") if e.strip() and e.strip().upper()!="NA"]
if efectos: st.markdown("\n".join([f"- {e}" for e in efectos]))

# --- Actividades en desarrollo (tabla) ---
st.subheader("Actividades en desarrollo ‚Äì Direcci√≥n Regional de Chorotega")
txt_desarrollo = st.text_area("Pega/edita lista numerada (una por l√≠nea):", value="""1. Reuni√≥n cerrada con personal de crimen organizado y Fiscal√≠a de Santa Cruz, DIAC y GAO.
2. Creaci√≥n de un chat de coordinaci√≥n interinstitucional para operativos.
3. Planificaci√≥n de operativos en la zona, en conjunto con transito, OIJ, Migraci√≥n, GAO, Fiscal√≠a, Unidad Canina y Polic√≠a Tur√≠stica.
4. Georreferenciaci√≥n de los puntos de venta de drogas y viviendas de los lideres de las organizaciones.
5. Fotografiar los veh√≠culos en que se movilizan las estructuras criminales, as√≠ como la rese√±a de los mismos.
6. Facilitar los insumos al OIJ y Fiscal√≠a con el fin de poder llevar a cabo los allanamientos correspondientes en la zona.
7. Crear una base de datos compartida entre OIJ, Polic√≠a Tur√≠stica, Fiscal√≠a y GAO.
8. Realizar reuniones quincenales de orden cerrado con el fin de definir los objetivos de mas inter√©s e intercambiar informaci√≥n""")
items = [re.sub(r"^\s*\d+[\).]?\s*","",x).strip() for x in txt_desarrollo.splitlines() if x.strip()]
if items:
    st.dataframe(pd.DataFrame({"#": range(1,len(items)+1), "Actividad": items}), use_container_width=True)

# --- Listados Operativo / Preventivo (si quieres mostrarlos) ---
with st.expander("Notas operativas y preventivas (opcional)"):
    col1, col2 = st.columns(2)
    with col1:
        st.markdown("**Operativo**")
        st.text_area("Pega aqu√≠ las notas de OPERATIVO (una por l√≠nea)", value="""GAO, Turistica, OIJ, Polic√≠a Municipal, Transito
Rese√±a a sujetos, identidad y modalidad
600 espacios para decomiso de motos
Impacto visual
Reventaron los bunker de Brasilito y Dylan Manuel Morales M√©ndez se fue del lugar; sin embargo ahora esta Marenco.
El recorrido se hace planificado, con grupos de trabajos que se vieran m√°s y m√°s efectivos
Se quiere intensificar a tres operaciones por semana, actualemnte son 2
decomiso con AK47 y se genera un v√≠nculo con la estructura del Diablo
Deportaci√≥n de Colombianos dedicados a la venta de droga; estrategia efectiva en vez de la judializaci√≥n
Se han identificado a 4 oficiales involucrados con el crimen organizado como choferes, brindar informaci√≥n, entre otros.
Se estan planificando 2 allanamientos m√°s para la estructura de Marenco
Hay una movilizaci√≥n de vivienda a miembros de la estructura criminal
Detenci√≥n de unos sujetos y un veh√≠culo relacionados a asaltos en locales comerciales (Villareal, Tempate, 27 de abril)
Existe una disputa entre la banda de Marenco y la de "W", la banda de los Colombianos de uni√≥ al de Marenco
Una operaci√≥n con resultado de 7 personas con orden de captura""", height=220)
    with col2:
        st.markdown("**Preventivo**")
        st.text_area("Pega aqu√≠ las notas de PREVENTIVO (una por l√≠nea)", value="""Capacitaciones a la comunidad de Pinilla en seguridad comunitaria en Ingl√©s
Brasilito seguimiento a las comunidades en conjunto de la polic√≠a Tur√≠stica
Acciones preventivas comunales involucrados para mejorar la imagen de Fuerza P√∫blica y acercamiento comunitario
Se presenta una planificaci√≥n de los 4 meses que faltan del a√±o en Villareal, Brasilito, Surfside y Potrero
Iniciaron en Julio las Ligas Atleticas en Brasilito""", height=220)

st.caption("üé® Gr√°ficos: rojo/azul con sombra. Donut con colores √∫nicos por responsable. √çndole limitada a 3 categor√≠as. Los bloques cualitativos son editables y omiten filas vac√≠as/NA.")


